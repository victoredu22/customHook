{"ast":null,"code":"import { useState, useEffect, useRef } from 'react';\nexport const useFetch = url => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  }); //pasa por primera vez\n\n  console.log(state);\n  useEffect(() => {\n    setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    fetch(url).then(respo => respo.json()).then(data => {\n      if (isMounted.current) {\n        setState({\n          loading: false,\n          error: null,\n          data\n        });\n      }\n    });\n  }, [url]);\n  return state;\n};","map":{"version":3,"sources":["C:/Users/victor/Desktop/workspace/hook-app/src/hooks/useFetch.js"],"names":["useState","useEffect","useRef","useFetch","url","isMounted","state","setState","data","loading","error","console","log","fetch","then","respo","json","current"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAQ;AAE9B,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAC,IAAN;AAAYC,IAAAA,OAAO,EAAC,IAApB;AAA0BC,IAAAA,KAAK,EAAC;AAAhC,GAAD,CAAlC,CAJ8B,CAQ9B;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,IAAN;AAAYC,MAAAA,OAAO,EAAC,IAApB;AAA0BC,MAAAA,KAAK,EAAC;AAAhC,KAAD,CAAR;AAIAG,IAAAA,KAAK,CAACT,GAAD,CAAL,CACGU,IADH,CACQC,KAAK,IAAEA,KAAK,CAACC,IAAN,EADf,EAEGF,IAFH,CAEQN,IAAI,IAAE;AAEV,UAAGH,SAAS,CAACY,OAAb,EAAqB;AACnBV,QAAAA,QAAQ,CAAC;AACPE,UAAAA,OAAO,EAAC,KADD;AAEPC,UAAAA,KAAK,EAAC,IAFC;AAGPF,UAAAA;AAHO,SAAD,CAAR;AAKD;AAEF,KAZH;AAaD,GAlBQ,EAkBP,CAACJ,GAAD,CAlBO,CAAT;AAsBA,SAAOE,KAAP;AAED,CAnCM","sourcesContent":["import {useState, useEffect, useRef} from 'react';\r\n\r\nexport const useFetch = (url) =>{\r\n\r\n  const isMounted = useRef(true)\r\n\r\n  const [state, setState] = useState({data:null, loading:true, error:null});\r\n  \r\n \r\n\r\n  //pasa por primera vez\r\n  console.log(state);\r\n\r\n  useEffect(()=>{\r\n    setState({data:null, loading:true, error:null})\r\n\r\n\r\n    \r\n    fetch(url)\r\n      .then(respo=>respo.json())\r\n      .then(data=>{\r\n        \r\n        if(isMounted.current){\r\n          setState({\r\n            loading:false,\r\n            error:null,\r\n            data\r\n          })\r\n        }\r\n  \r\n      });\r\n  },[url])\r\n\r\n  \r\n\r\n  return state;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}