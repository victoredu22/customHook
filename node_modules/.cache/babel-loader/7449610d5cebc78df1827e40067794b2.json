{"ast":null,"code":"import { useState, useEffect, useRef } from 'react';\nexport const useFetch = url => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  console.log(useEffect);\n  /*   useEffect(()=>{\r\n      setState({data:null, loading:true, error:null})\r\n      fetch(url)\r\n        .then(respo=>respo.json())\r\n        .then(data=>{\r\n          \r\n          if(isMounted.current){\r\n            setState({\r\n              loading:false,\r\n              error:null,\r\n              data\r\n            })\r\n          }\r\n          \r\n  \r\n        });\r\n  \r\n    },[url])\r\n   */\n\n  return state;\n};","map":{"version":3,"sources":["C:/Users/victor/Desktop/workspace/hook-app/src/hooks/useFetch.js"],"names":["useState","useEffect","useRef","useFetch","url","isMounted","state","setState","data","loading","error","current","console","log"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAQ;AAE9B,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAC,IAAN;AAAYC,IAAAA,OAAO,EAAC,IAApB;AAA0BC,IAAAA,KAAK,EAAC;AAAhC,GAAD,CAAlC;AAIAT,EAAAA,SAAS,CAAC,MAAI;AACZ,WAAM,MAAI;AACRI,MAAAA,SAAS,CAACM,OAAV,GAAoB,KAApB;AACD,KAFD;AAID,GALQ,EAKP,EALO,CAAT;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AAGF;;;;;;;;;;;;;;;;;;;;AAmBE,SAAOK,KAAP;AAED,CAvCM","sourcesContent":["import {useState, useEffect, useRef} from 'react';\r\n\r\nexport const useFetch = (url) =>{\r\n\r\n  const isMounted = useRef(true)\r\n\r\n  const [state, setState] = useState({data:null, loading:true, error:null});\r\n  \r\n \r\n\r\n  useEffect(()=>{\r\n    return()=>{\r\n      isMounted.current = false\r\n    }\r\n\r\n  },[]);\r\n\r\n  console.log(useEffect);\r\n\r\n\r\n/*   useEffect(()=>{\r\n    setState({data:null, loading:true, error:null})\r\n    fetch(url)\r\n      .then(respo=>respo.json())\r\n      .then(data=>{\r\n        \r\n        if(isMounted.current){\r\n          setState({\r\n            loading:false,\r\n            error:null,\r\n            data\r\n          })\r\n        }\r\n        \r\n\r\n      });\r\n\r\n  },[url])\r\n */\r\n  return state;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}